#labels KOALA,Introduction
= First steps with the KOALA Cloud Manager =

Using KOALA ist quite easy. All you need is

  * a browser
  * a Google account
  * access to one or more cloud infrastructures
  * some basic knowledge about cloud computing

The browser should be no problem. The Google account is used for the user management and authentication. Without access to one or more cloud infrastructures KOALA itself is worthless and the basic knowledge about cloud computing can be found inside this document.

<wiki:toc max_depth="2" />

== Get credentials to a cloud infrastructure ==

You need access to a cloud infrastructure (IaaS) that uses the API of Amazons Elastic Computing Cloud ([http://aws.amazon.com/ec2/ EC2]). This is essential because KOALA is a tool/service that helps you working with cloud resources you have  access to. Bu you cannot share cloud resources with others because it is not a cloud marketplace.

See the following table that consists that available cloud infrastructures that are compatible to the EC2 API.

|| *Infrastructure (IaaS)*                 || *Private/Public Cloud* || *License*   ||
|| [http://aws.amazon.com/ec2/ Amazon EC2] || Public Cloud           || proprietary ||
|| [http://open.eucalyptus.com Eucalyptus] || Private Cloud          || GPL v3      ||
|| [http://www.nimbusproject.org Nimbus]   || Private Cloud          || Apache License v2.0  ||
|| [http://www.opennebula.org OpenNebula]  || Private Cloud          || Apache License v2.0  ||
|| [http://cloud.com Cloud.com]            || Private Cloud          || GPL v3      ||
|| [http://nimbula.com Nimbula]            || Public Cloud           || proprietary ||

If you don't have any Private Cloud IaaS running. The easiest is to get access to [http://aws.amazon.com/ec2/ Amazon EC2]. If you don't want this e.g. because you don't have a credit card and you don't have access to a running Private Cloud you need to run a Private Cloud IaaS yourself.

This tutorial focuses on Amazon EC2 because it is the most common use case.

== Get your credentials into KOALA ==

Inside the Regions window you can manage your credentials. It is easy create new region data for all supported IaaS solutions.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial0_login_small.png]

If you log in the first time into KOALA, you don't have any credentials.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial1_regions_empty_small.png]

Create an AWS account and insert your Access Key and Secret Access Key. Both are stored inside the Google Datastore. The Secret Access Key will be stored encrypted.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial2_regions_create_AWS_small.png]

If your credentials were correct, you have can see the Amazon entry in the table. Now, you can start working with this IaaS.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial3_regions_AWS_small.png]

After you have inserted your credentials for at least one IaaS, you can see that the pull-down menu in the center of the header is not empty any longer. With this menu, you can choose what IaaS shall be used by KOALA. If you have more cretentials for IaaS regions you can use this menu  to swtich over to another region.

EC2 has four regions and with your AWS credentials you can use them all automatically.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial4_regions_small.png]

== Availability Zones ==

The Zones window gives you a table with the names and status of the availability zones inside the region you are. For this example you can see we are using the EC2 US East region and inside this region are four availability zones.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial8_availabilty_zones_small.png]

== Keypairs ==

To log into your instances, you need a keypair. The keypair consists of a pubic and a private key. The public key is stored inside your instances by the IaaS automatically. The private key is stored by yourself at your computer of a portable memory device. With the private key you log into your instances without a passwort. Using passwords to log into instances is quite unsusual in the cloud. Using keypairs to login is the common way.

If you don't already have a keypair inside the region you want to run instances, you need to created at least one.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial7_keypair1_small.png]

In this example a new keypair new_key_useast is created.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial7_keypair2_new_key_small.png]

When the new keypair is created, a small window appears. Inside this window you can see the private key. You need to save this private key by yourself. Copy it into a new file and adjust the permissions for this file.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial7_keypair3_secret_key_small.png]

== Security Groups ==

Running instances need to be assigned to a security group. You can create new security groups and erase existing security group inside this windows.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial11_security_group_small.png]

Inside every security group you can define what ports for which protocols shall be open. This is the configuration of your instances firewall.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial12_security_group_rules_small.png]

== Images ==

When using cloud infrastructures that use Eucalyptus, Nimbus or OpenNebula as IaaS, you can use the Images windows to check the images available inside the active region.

When using Amazon EC2 we are tortured here by a disadvantage of the EC2 API. Amazon provides no ability to filter the returned list of images on the server side. The list of images contains more than 1000 images. Fetching and processing the list of images needs some seconds. So, when trying to ge a list of all images available, this leads to a timeout of the Google App Engine.

When using a Private Cloud with Eucalyptus, Nimbus or OpenNebula it is no problem to fetch a list of all images because inside a Private Cloud will never be as many images as Amazon stores.

As a workaround, when using EC2, a list of favorite AMIs can be created by yourself insite this window and used to ckeck the images and start instances. This issue is annoying but not dramatic because in most use cases you work with a small choice of images most of the time.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial5_create_favorites_small.png]

In this example a few images in the region EC2 US East are stored as favorites.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial6_several_favorites_small.png]

With the icons in the first columns of the table, instances can be started and fravorites can be erased from this list.

== Start instances ==

When one or more instances shall be started from an image, lots of information are important.

You have to decide, how many Instances shall be started and if you prefer a specific availability zone. If you don't choose an availability zone, Amazon will decide for you.  At this point you need to set the keypair and the security group too. Also the instance type is important. The instance types are equiped with a different ammount of virtual CPU cores, main memory and storage. The decision of using 64-Bit or 32-Bit architecture is already defined by the image. Don't forget the money when you are using a Public Cloud like Amazon EC2. The instancey types differ in the price per hour too. 

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial9_start_image_small.png]

== Instances ==

== Elastic IPs ==

Instances get an internal IP address and an external DNS name automatically when they are created. When an instance is terminated, the IP address and the DNS name both are lost.

For implementing sustainable services it is mandatory to use elastic IPs.

[http://koalacloud.googlecode.com/svn/trunk/tutorial/images/smaller/tutorial10_elastic_ips_small.png]

== EBS volumes ==